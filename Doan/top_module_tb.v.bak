`timescale 1ns/1ps

module top_module_tb;

    // Clock & Reset
    reg clk, rst;
    initial begin
        clk = 0;
        forever #5 clk = ~clk;  // 100 MHz clock
    end

    // Wishbone signals
    reg we_i, stb_i, cyc_i;
    reg [7:0] adr_i;
    reg [31:0] dat_i;
    wire [31:0] dat_o;
    wire ack_o;

    // Instantiate DUT
    top_module uut (
        .RST_I(rst),
        .CLK_I(clk),
        .WE_I(we_i),
        .STB_I(stb_i),
        .CYC_I(cyc_i),
        .ADR_I(adr_i),
        .DAT_I(dat_i),
        .DAT_O(dat_o),
        .ACK_O(ack_o)
    );

    // Write task
    task wishbone_write(input [7:0] addr, input [31:0] data);
    begin
        @(posedge clk);
        adr_i <= addr;
        dat_i <= data;
        we_i <= 1;
        stb_i <= 1;
        cyc_i <= 1;
        @(posedge clk);
        stb_i <= 0;
        cyc_i <= 0;
        we_i <= 0;
    end
    endtask

    // Read task
    task wishbone_read(input [7:0] addr);
    begin
        @(posedge clk);
        adr_i <= addr;
        we_i <= 0;
        stb_i <= 1;
        cyc_i <= 1;
        @(posedge clk);
        stb_i <= 0;
        cyc_i <= 0;
        $display("Read @ %h = %d", addr, dat_o);
    end
    endtask

    integer i;

    initial begin
        // Khởi tạo
        rst = 1;
        we_i = 0;
        stb_i = 0;
        cyc_i = 0;
        adr_i = 0;
        dat_i = 0;

        // Reset system
        #20;
        rst = 0;

        // Ghi 8 mẫu input (X_real và X_imag)
        for (i = 0; i < 8; i = i + 1) begin
            // Write real part
            wishbone_write({5'h02, i[2:0]}, i * 10);     // X_real = 0, 10, 20...
            // Write imag part
            wishbone_write({5'h04, i[2:0]}, i * 100);    // X_imag = 0, 100, 200...
        end

        // Start IDFT
        wishbone_write(8'h00, 32'h00000001);  // start = 1

        // Đợi xử lý
        repeat (20) @(posedge clk);

        // Đọc flag done
        wishbone_read(8'h08);

        // Đọc kết quả từ RAM (X_real output)
        for (i = 0; i < 8; i = i + 1) begin
            wishbone_read({5'h06, i[2:0]});
        end

        // Dừng mô phỏng
        $stop;
    end

endmodule
